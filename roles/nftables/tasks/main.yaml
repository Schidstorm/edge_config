

- name: find local template in role filter/*.conf
  find:
    paths: "{{ role_path }}/templates/filter"
    patterns: "*.conf"
  register: filter_templates
  delegate_to: localhost
  become: false

- name: run template for each filter
  set_fact:
    templated_files: "{{ filter_templates.files | map(attribute='path') | map('basename') }}"
  loop: "{{ filter_templates.files }}"
  loop_control:
    loop_var: filter_template
    label: "{{ filter_template.path }}"
    
- name: sort files
  set_fact:
    templated_files: "{{ templated_files | sort }}"


##### GITHUB IPS #####
- name: get github meta ips
  set_fact:
    github_ips: "{{ lookup('ansible.builtin.url', 'https://api.github.com/meta', split_lines=False) | from_json }}"



##### ip reload tool #####
- block:
  - name: upload reload tool
    copy:
      src: reload_domains.py
      dest: /usr/local/bin/reload_domains.py
      mode: 0755

  - name: upload reload tool config
    copy:
      content: "{{ dns_lookups | to_yaml }}"
      dest: /etc/reload_domains.yaml
      mode: 0644

  - name: setup cronjob
    cron:
      name: reload_domains
      job: /usr/local/bin/reload_domains.py
      minute: "*/5"
  - name: create /etc/nftables.d directory
    file:
      path: /etc/nftables.d
      state: directory
  - name: run reload tool
    command: /usr/local/bin/reload_domains.py
    register: reload_domains
    changed_when: reload_domains.rc == 0

  - name: template nftables configuration
    template:
      src: nftables.conf
      dest: /home/admin/nftables.conf
      mode: 0644
    register: nftables_config

- name: template settings.conf
  template:
    src: settings.conf
    dest: /etc/nftables.d/settings.conf
    mode: 0644
  register: settings_config

- name: reload nftables
  include_tasks: reload_nftables.yaml
  when: nftables_config.changed or settings_config.changed or true


  
