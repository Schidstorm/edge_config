global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /var/run/haproxy/admin.sock level admin mode 660
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    setenv ACCOUNT_THUMBPRINT '{{ letsencrypt_account_thumbprint }}'

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout client 30s
    timeout connect 4s
    timeout server 30s
    timeout http-request 10s
    timeout http-keep-alive 2s
    timeout queue 5s
    timeout tunnel 2m
    timeout client-fin 1s
    timeout server-fin 1s
{% for errorCode, ignore in errorPages.items() %}
    errorfile {{ errorCode }} /etc/haproxy/errors/{{ errorCode }}.http
{% endfor %}

frontend http-in
    mode http
    bind *:80
    bind :443 ssl crt /etc/haproxy/certs/ strict-sni
    redirect scheme https code 301 if !{ ssl_fc }

    http-request set-header X-Real-IP %[src]
    http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Proto http
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header Host %[req.hdr(Host)]
    http-request set-header Connection upgrade if { req.hdr(Upgrade) -i websocket }
    http-request set-header Upgrade %[req.hdr(Upgrade)] if { req.hdr(Upgrade) -i websocket }

{% for item in reverse_proxy %}
    acl host_{{ item.src | md5 }} hdr(host) -i {{ item.src }}
{% endfor %}
{% for item in reverse_proxy %}
    use_backend backend_{{ item.src | md5 }} if host_{{ item.src | md5 }}
{% endfor %}

{% for item in reverse_proxy %}
backend backend_{{ item.src | md5 }}
    http-request set-header Referrer-Policy strict-origin-when-cross-origin
    server server_{{ item.src | md5 }} {{ wireguard.peers.wlan.address }}:{{ reverse_proxy_port }} maxconn 32
{% endfor %}

frontend ipp-in
    bind *:631 
    default_backend ipp-servers

backend ipp-servers
    server ipp-server {{ wireguard.peers.scan.address }}:631 maxconn 32

