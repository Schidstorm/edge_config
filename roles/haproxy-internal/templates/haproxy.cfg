global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /var/run/haproxy/admin.sock level admin mode 660
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout client 30s
    timeout connect 4s
    timeout server 30s
    timeout http-request 10s
    timeout http-keep-alive 2s
    timeout queue 5s
    timeout tunnel 2m
    timeout client-fin 1s
    timeout server-fin 1s
{% for errorCode, ignore in errorPages.items() %}
    errorfile {{ errorCode }} /etc/haproxy/errors/{{ errorCode }}.http
{% endfor %}

frontend http_in
    mode http
    bind *:{{ reverse_proxy_port }}

    http-request set-header X-Real-IP %[src]
    http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Proto http
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header Host %[req.hdr(Host)]
    http-request set-header Connection upgrade if { req.hdr(Upgrade) -i websocket }
    http-request set-header Upgrade %[req.hdr(Upgrade)] if { req.hdr(Upgrade) -i websocket }
{% for item in reverse_proxy %}
    acl host_{{ item.src | md5 }} hdr(host) -i {{ item.src }}
{% endfor %}
{% for item in reverse_proxy %}
    use_backend backend_{{ item.src | md5 }} if host_{{ item.src | md5 }}
{% endfor %}


{% for item in reverse_proxy %}
backend backend_{{ item.src | md5 }}
    http-request set-header Referrer-Policy strict-origin-when-cross-origin
    server server_{{ item.src | md5 }} {{ item.dest }} check fall 2 inter 1s
{% endfor %}



