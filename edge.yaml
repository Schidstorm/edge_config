- name: configure liinux
  hosts: linux
  gather_facts: no
  roles:
    - linux

- name: configure linux
  hosts: linux
  vars:
    ansible_user: "{{ credentials.ansible_user }}"
    ansible_port: "{{ credentials.ansible_port }}"
  become: yes
  become_method: sudo
  become_user: root
  roles:
    - wireguard

- name: configure edge
  hosts: firewall
  vars:
    ansible_user: "{{ credentials.ansible_user }}"
    ansible_port: "{{ credentials.ansible_port }}"
  become: yes
  become_method: sudo
  become_user: root
  roles:
    - nftables

- name: configure edge
  hosts: edge
  vars:
    ansible_user: "{{ credentials.ansible_user }}"
    ansible_port: "{{ credentials.ansible_port }}"
  become: yes
  become_method: sudo
  become_user: root
  roles:
    - haproxy

- name: configure wlan reverse proxy
  hosts: wlan
  vars:
    ansible_user: "{{ credentials.ansible_user }}"
    ansible_port: "{{ credentials.ansible_port }}"
  become: yes
  become_method: sudo
  become_user: root
  roles:
    - haproxy-internal

- name: configure backupper
  hosts: scan
  vars:
    ansible_user: "{{ credentials.ansible_user }}"
    ansible_port: "{{ credentials.ansible_port }}"
  become: yes
  become_method: sudo
  become_user: root
  roles:
    - backupper

- name: configure grafana
  hosts: all
  vars:
    ansible_user: "{{ credentials.ansible_user }}"
    ansible_port: "{{ credentials.ansible_port }}"
  become: yes
  become_method: sudo
  become_user: root
  roles:
    - grafana

- name: install podman
  hosts: podman
  vars:
    ansible_user: "{{ credentials.ansible_user }}"
    ansible_port: "{{ credentials.ansible_port }}"
  become: yes
  become_method: sudo
  become_user: root
  roles:
    - podman

- name: index_page
  hosts: scan
  vars:
    ansible_user: "{{ credentials.ansible_user }}"
    ansible_port: "{{ credentials.ansible_port }}"
  become: yes
  become_method: sudo
  become_user: root
  roles:
    - index_page